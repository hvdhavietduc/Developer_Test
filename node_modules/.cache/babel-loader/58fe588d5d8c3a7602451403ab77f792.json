{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\log\\\\log_reg\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../BK.jpg\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      },\n      validate: values => {\n        let errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (!EmailValidator.validate(values.email)) {\n          errors.email = \"Invalid email address.\";\n        }\n\n        const passwordRegex = /(?=.*[0-9])/;\n\n        if (!values.password) {\n          errors.password = \"Required\";\n        }\n\n        return errors;\n      },\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"base-container\",\n          ref: this.props.containerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loginImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"email\",\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  value: values.email,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.email && touched.email && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"password\",\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  value: values.password,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.password && touched.password && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/log/log_reg/src/components/login/login.jsx"],"names":["React","loginImg","Formik","EmailValidator","Login","Component","constructor","props","render","email","password","values","setSubmitting","setTimeout","console","log","errors","validate","passwordRegex","touched","isSubmitting","handleChange","handleBlur","handleSubmit","containerRef"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport loginImg from \"../../BK.jpg\";\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; \r\n\r\n\r\nexport class Login extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n            \r\n          }}\r\n          validate={values => {\r\n              let errors = {};\r\n              if (!values.email) {\r\n                errors.email = \"Required\";\r\n              } else if (!EmailValidator.validate(values.email)) {\r\n                errors.email = \"Invalid email address.\";\r\n              }\r\n              const passwordRegex = /(?=.*[0-9])/;\r\n              if (!values.password) {\r\n                errors.password = \"Required\";\r\n              }\r\n              return errors;\r\n            }}\r\n      \r\n        >\r\n      \r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          } = props;\r\n          return (\r\n            <div className=\"base-container\" ref={this.props.containerRef}>\r\n                <div className=\"header\">Login</div>\r\n                <div className=\"content\">\r\n                <div className=\"image\">\r\n                  <img src={loginImg} />\r\n                </div>\r\n                <div className=\"form\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input id = \"email\"type=\"text\" name=\"email\" placeholder=\"Email\" value={values.email} onChange={handleChange} onBlur={handleBlur} className={errors.email && touched.email && \"error\"} />\r\n                    {errors.email && touched.email && (\r\n                        <div className=\"input-feedback\">{errors.email}</div>\r\n                        )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input id = \"password\" type=\"password\" name=\"password\" placeholder=\"Password\" value={values.password} onChange={handleChange} onBlur={handleBlur} className={errors.password && touched.password && \"error\"}/>\r\n                    {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n                <div className=\"footer\">\r\n                  <button type=\"button\" className=\"btn\">\r\n                    Login\r\n                  </button>\r\n                  \r\n                </div>\r\n            </div>\r\n          );\r\n        }}\r\n        \r\n      </Formik>\r\n          );\r\n        }\r\n  }"]},"metadata":{},"sourceType":"module"}