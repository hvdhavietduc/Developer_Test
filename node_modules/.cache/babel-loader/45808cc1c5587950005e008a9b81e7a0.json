{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\log\\\\log_reg\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport { Login, Register } from \"./components/login/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst passField = document.querySelector(\"input\");\nconst showBtn = document.querySelector(\"span i\");\n\nshowBtn.onclick = () => {\n  if (passField.type === \"password\") {\n    passField.type = \"text\";\n    showBtn.classList.add(\"hide-btn\");\n  } else {\n    passField.type = \"password\";\n    showBtn.classList.remove(\"hide-btn\");\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const {\n      isLogginActive\n    } = this.state;\n    this.setState(prevState => ({\n      isLogginActive: !prevState.isLogginActive\n    }));\n  }\n\n  render() {\n    const {\n      isLogginActive\n    } = this.state;\n    const current = isLogginActive ? \"Sign Up\" : \"Log In\";\n    const currentActive = isLogginActive ? \"Log In\" : \"Sign Up\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          ref: ref => this.container = ref,\n          children: [isLogginActive && /*#__PURE__*/_jsxDEV(Login, {\n            containerRef: ref => this.current = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), !isLogginActive && /*#__PURE__*/_jsxDEV(Register, {\n            containerRef: ref => this.current = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n          current: current,\n          currentActive: currentActive,\n          containerRef: ref => this.rightSide = ref,\n          onClick: this.changeState.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst RightSide = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-side\",\n    ref: props.containerRef,\n    onClick: props.onClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: props.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RightSide;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightSide\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/log/log_reg/src/App.jsx"],"names":["React","Login","Register","passField","document","querySelector","showBtn","onclick","type","classList","add","remove","App","Component","constructor","props","state","isLogginActive","componentDidMount","rightSide","changeState","setState","prevState","render","current","currentActive","ref","container","bind","RightSide","containerRef","onClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\nimport { Login, Register } from \"./components/login/index\";\nconst passField = document.querySelector(\"input\");\nconst showBtn = document.querySelector(\"span i\");\nshowBtn.onclick = (()=>{\n  if(passField.type === \"password\"){\n    passField.type = \"text\";\n    showBtn.classList.add(\"hide-btn\");\n  }else{\n    passField.type = \"password\";\n    showBtn.classList.remove(\"hide-btn\");\n  }\n});\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state;\n\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n  \n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Sign Up\" : \"Log In\";\n    const currentActive = isLogginActive ? \"Log In\" : \"Sign Up\";\n    return (\n      <div className=\"App\">\n        <div className=\"login\">\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && (\n              <Login containerRef={ref => (this.current = ref)} />\n            )}\n            {!isLogginActive && (\n              <Register containerRef={ref => (this.current = ref)} />\n            )}\n          </div>\n          <RightSide\n            current={current}\n            currentActive={currentActive}\n            containerRef={ref => (this.rightSide = ref)}\n            onClick={this.changeState.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}