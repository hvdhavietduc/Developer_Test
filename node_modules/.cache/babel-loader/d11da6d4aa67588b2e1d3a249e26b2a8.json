{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\log\\\\log_reg\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../BK.jpg\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\n\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(Formik, {\n      children: [\"validate=\", values => {\n        let errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (!EmailValidator.validate(values.email)) {\n          errors.email = \"Invalid email address.\";\n        }\n\n        const passwordRegex = /(?=.*[0-9])/;\n\n        if (!values.password) {\n          errors.password = \"Required\";\n        } else if (values.password.length < 8) {\n          errors.password = \"Password must be 8 characters long.\";\n        } else if (!passwordRegex.test(values.password)) {\n          errors.password = \"Invalid password. Must contain one number.\";\n        }\n\n        return errors;\n      }, \"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"base-container\",\n        ref: this.props.containerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: loginImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/log/log_reg/src/components/login/login.jsx"],"names":["React","loginImg","Formik","EmailValidator","Yup","Login","Component","constructor","props","render","values","errors","email","validate","passwordRegex","password","length","test","containerRef"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport loginImg from \"../../BK.jpg\";\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\r\nimport * as Yup from \"yup\";\r\nexport class Login extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    render() {\r\n        <Formik>\r\n            validate={values => {\r\n            let errors = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required\";\r\n            } else if (!EmailValidator.validate(values.email)) {\r\n                errors.email = \"Invalid email address.\";\r\n            }\r\n            const passwordRegex = /(?=.*[0-9])/;\r\n            if (!values.password) {\r\n                errors.password = \"Required\";\r\n            } else if (values.password.length < 8) {\r\n                errors.password = \"Password must be 8 characters long.\";\r\n            } else if (!passwordRegex.test(values.password)) {\r\n                errors.password = \"Invalid password. Must contain one number.\";\r\n            }\r\n            return errors;\r\n            }}\r\n      \r\n      return (\r\n        <div className=\"base-container\" ref={this.props.containerRef}>\r\n          <div className=\"header\">Login</div>\r\n          <div className=\"content\">\r\n            <div className=\"image\">\r\n              <img src={loginImg} />\r\n            </div>\r\n            <div className=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" name=\"username\" placeholder=\"username\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button type=\"button\" className=\"btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n      );\r\n      </Formik>\r\n      \r\n      \r\n    }\r\n    \r\n  }"]},"metadata":{},"sourceType":"module"}