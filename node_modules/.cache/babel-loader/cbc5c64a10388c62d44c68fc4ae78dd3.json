{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\log\\\\log_reg\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../BK.jpg\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\n\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      validate: values => {\n        let errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (!EmailValidator.validate(values.email)) {\n          errors.email = \"Invalid email address.\";\n        }\n\n        const passwordRegex = /(?=.*[0-9])/;\n\n        if (!values.password) {\n          errors.password = \"Required\";\n        } else if (values.password.length < 8) {\n          errors.password = \"Password must be 8 characters long.\";\n        } else if (!passwordRegex.test(values.password)) {\n          errors.password = \"Invalid password. Must contain one number.\";\n        }\n\n        return errors;\n      },\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"base-container\",\n          ref: this.props.containerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loginImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"email\",\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"email\",\n                  value: values.email,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.email && touched.email && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 17\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"password\",\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"password\",\n                  value: values.password,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.password && touched.password && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 17\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/log/log_reg/src/components/login/login.jsx"],"names":["React","loginImg","Formik","EmailValidator","Yup","Login","Component","constructor","props","render","values","errors","email","validate","passwordRegex","password","length","test","touched","isSubmitting","handleChange","handleBlur","handleSubmit","containerRef"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport loginImg from \"../../BK.jpg\";\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\r\nimport * as Yup from \"yup\";\r\n\r\nexport class Login extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <Formik\r\n    \r\n    validate={values => {\r\n        let errors = {};\r\n        if (!values.email) {\r\n          errors.email = \"Required\";\r\n        } else if (!EmailValidator.validate(values.email)) {\r\n          errors.email = \"Invalid email address.\";\r\n        }\r\n        const passwordRegex = /(?=.*[0-9])/;\r\n        if (!values.password) {\r\n          errors.password = \"Required\";\r\n        } else if (values.password.length < 8) {\r\n            errors.password = \"Password must be 8 characters long.\";\r\n          } else if (!passwordRegex.test(values.password)) {\r\n            errors.password = \"Invalid password. Must contain one number.\";\r\n          }\r\n          return errors;\r\n      }}\r\n      \r\n  >\r\n      \r\n    {props => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n      } = props;\r\n      return (\r\n        <div className=\"base-container\" ref={this.props.containerRef}>\r\n          <div className=\"header\">Login</div>\r\n          <div className=\"content\">\r\n            <div className=\"image\">\r\n              <img src={loginImg} />\r\n            </div>\r\n            <div className=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">email</label>\r\n                <input id = \"email\"type=\"text\" name=\"email\" placeholder=\"email\" value={values.email} onChange={handleChange} onBlur={handleBlur} className={errors.email && touched.email && \"error\"} />\r\n                {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                    )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input id = \"password\" type=\"password\" name=\"password\" placeholder=\"password\" value={values.password} onChange={handleChange} onBlur={handleBlur} className={errors.password && touched.password && \"error\"}/>\r\n                {errors.password && touched.password && (\r\n                <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button type=\"button\" className=\"btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }}\r\n    \r\n  </Formik>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}