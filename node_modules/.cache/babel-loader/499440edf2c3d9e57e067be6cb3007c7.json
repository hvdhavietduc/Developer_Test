{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\log\\\\log_reg\\\\src\\\\components\\\\login\\\\register.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../BK1.png\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Register extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      },\n      validate: values => {\n        let errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (!EmailValidator.validate(values.email)) {\n          errors.email = \"Invalid email address.\";\n        }\n\n        if (!values.password) {\n          errors.password = \"Required\";\n        }\n\n        if (!values.usernawe) {\n          errors.username = \"Required\";\n        }\n\n        return errors;\n      },\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"base-container\",\n          ref: this.props.containerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: true,\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loginImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"username\",\n                  type: \"text\",\n                  name: \"username\",\n                  placeholder: \"username\",\n                  value: values.username,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.username && touched.username && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 29\n                }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  value: values.email,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.email && touched.email && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  value: values.password,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  className: errors.password && touched.password && \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 29\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-feedback\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/log/log_reg/src/components/login/register.jsx"],"names":["React","loginImg","Formik","EmailValidator","Register","Component","constructor","props","render","username","email","password","values","setSubmitting","setTimeout","console","log","errors","validate","usernawe","touched","isSubmitting","handleChange","handleBlur","handleSubmit","containerRef"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;AACA,OAAO,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACA,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAC,EAAX;AAAcC,QAAAA,KAAK,EAAE,EAArB;AAAyBC,QAAAA,QAAQ,EAAE;AAAnC,OADjB;AAEE,MAAA,QAAQ,EAAE,CAACC,MAAD,WAA+B;AAAA,YAAtB;AAAEC,UAAAA;AAAF,SAAsB;AACvCC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,MAA1B;AACAC,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAHS,EAGP,GAHO,CAAV;AAKD,OARH;AASE,MAAA,QAAQ,EAAED,MAAM,IAAI;AAChB,YAAIK,MAAM,GAAG,EAAb;;AACA,YAAI,CAACL,MAAM,CAACF,KAAZ,EAAmB;AACjBO,UAAAA,MAAM,CAACP,KAAP,GAAe,UAAf;AACD,SAFD,MAEO,IAAI,CAACP,cAAc,CAACe,QAAf,CAAwBN,MAAM,CAACF,KAA/B,CAAL,EAA4C;AACjDO,UAAAA,MAAM,CAACP,KAAP,GAAe,wBAAf;AACD;;AAED,YAAI,CAACE,MAAM,CAACD,QAAZ,EAAsB;AACpBM,UAAAA,MAAM,CAACN,QAAP,GAAkB,UAAlB;AACD;;AACD,YAAI,CAACC,MAAM,CAACO,QAAZ,EAAsB;AACpBF,UAAAA,MAAM,CAACR,QAAP,GAAkB,UAAlB;AACD;;AACD,eAAOQ,MAAP;AACD,OAxBL;AAAA,gBA2BCV,KAAK,IAAI;AACR,cAAM;AACJK,UAAAA,MADI;AAEJQ,UAAAA,OAFI;AAGJH,UAAAA,MAHI;AAIJI,UAAAA,YAJI;AAKJC,UAAAA,YALI;AAMJC,UAAAA,UANI;AAOJC,UAAAA;AAPI,YAQFjB,KARJ;AASA,4BACF;AAAK,UAAA,SAAS,EAAC,gBAAf;AAA+B,UAAA,GAAG,EAAE,KAAKA,KAAL,CAAWkB,YAA/C;AAAA,kCACQ;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAEQ;AAAK,YAAA,KAAK,MAAV;AAAW,YAAA,SAAS,EAAC,SAArB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAExB;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,EAAE,EAAC,UAAV;AAAoB,kBAAA,IAAI,EAAC,MAAzB;AAAgC,kBAAA,IAAI,EAAC,UAArC;AAAgD,kBAAA,WAAW,EAAC,UAA5D;AAAuE,kBAAA,KAAK,EAAEW,MAAM,CAACH,QAArF;AAA+F,kBAAA,QAAQ,EAAEa,YAAzG;AAAuH,kBAAA,MAAM,EAAEC,UAA/H;AAA2I,kBAAA,SAAS,EAAEN,MAAM,CAACR,QAAP,IAAmBW,OAAO,CAACX,QAA3B,IAAuC;AAA7L;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGKQ,MAAM,CAACR,QAAP,IAAmBW,OAAO,CAACX,QAA3B,iBACL;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,4BAAiCQ,MAAM,CAACR;AAAxC;AAAA;AAAA;AAAA;AAAA,wBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eASI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,IAAI,EAAC,OAAzB;AAAiC,kBAAA,WAAW,EAAC,OAA7C;AAAqD,kBAAA,KAAK,EAAEG,MAAM,CAACF,KAAnE;AAA0E,kBAAA,QAAQ,EAAEY,YAApF;AAAkG,kBAAA,MAAM,EAAEC,UAA1G;AAAsH,kBAAA,SAAS,EAAEN,MAAM,CAACP,KAAP,IAAgBU,OAAO,CAACV,KAAxB,IAAiC;AAAlK;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGKO,MAAM,CAACP,KAAP,IAAgBU,OAAO,CAACV,KAAxB,iBACC;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,4BAAiCO,MAAM,CAACP;AAAxC;AAAA;AAAA;AAAA;AAAA,wBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,eAgBI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,IAAI,EAAC,UAA5B;AAAuC,kBAAA,WAAW,EAAC,UAAnD;AAA8D,kBAAA,KAAK,EAAEE,MAAM,CAACD,QAA5E;AAAsF,kBAAA,QAAQ,EAAEW,YAAhG;AAA8G,kBAAA,MAAM,EAAEC,UAAtH;AAAkI,kBAAA,SAAS,EAAEN,MAAM,CAACN,QAAP,IAAmBS,OAAO,CAACT,QAA3B,IAAuC;AAApL;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGKM,MAAM,CAACN,QAAP,IAAmBS,OAAO,CAACT,QAA3B,iBACC;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,4BAAiCM,MAAM,CAACN;AAAxC;AAAA;AAAA;AAAA;AAAA,wBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eA+BQ;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA/BR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE;AAwCD;AA7ED;AAAA;AAAA;AAAA;AAAA,YADA;AAiFH;;AAtFwC","sourcesContent":["import React from \"react\";\r\nimport loginImg from \"../../BK1.png\";\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; \r\nexport class Register extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n        <Formik\r\n          initialValues={{ username:\"\",email: \"\", password: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n            \r\n          }}\r\n          validate={values => {\r\n              let errors = {};\r\n              if (!values.email) {\r\n                errors.email = \"Required\";\r\n              } else if (!EmailValidator.validate(values.email)) {\r\n                errors.email = \"Invalid email address.\";\r\n              }\r\n              \r\n              if (!values.password) {\r\n                errors.password = \"Required\";\r\n              }\r\n              if (!values.usernawe) {\r\n                errors.username = \"Required\";\r\n              }\r\n              return errors;\r\n            }}\r\n      \r\n        >\r\n        {props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit\r\n          } = props;\r\n          return (\r\n        <div className=\"base-container\"ref={this.props.containerRef}>\r\n                <div className=\"header\">Register</div>\r\n                <div class className=\"content\">\r\n                    <div className=\"image\">\r\n                        <img src={loginImg} />\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\" >Username</label>\r\n                            <input id=\"username\"type=\"text\" name=\"username\" placeholder=\"username\" value={values.username} onChange={handleChange} onBlur={handleBlur} className={errors.username && touched.username && \"error\"}></input>\r\n                            {errors.username && touched.username && (\r\n                        <div className=\"input-feedback\">{errors.username}</div>\r\n                        )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" value={values.email} onChange={handleChange} onBlur={handleBlur} className={errors.email && touched.email && \"error\"}></input>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">{errors.email}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={values.password} onChange={handleChange} onBlur={handleBlur} className={errors.password && touched.password && \"error\"}></input>\r\n                            {errors.password && touched.password && (\r\n                              <div className=\"input-feedback\">{errors.password}</div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <button type=\"button\" className=\"btn\">\r\n                        Register\r\n                    </button>\r\n                    \r\n                </div>   \r\n            </div>\r\n          );\r\n        }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}