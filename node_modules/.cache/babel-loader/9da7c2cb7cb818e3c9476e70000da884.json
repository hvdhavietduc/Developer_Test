{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\log\\\\log_reg\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React from \"react\";\nimport loginImg from \"../../BK.jpg\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\n\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: '',\n  password: '',\n  type: 'password',\n  switch: false,\n  error: '',\n  emailError: ''\n};\nexport class Login extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.togglePassword = e => {\n      this.setState({\n        type: this.state.type === 'password' ? 'input' : 'password',\n        switch: !this.state.switch\n      });\n    };\n\n    this.validate = e => {\n      let emailError = '';\n\n      if (!this.state.email.includes('@' && '.')) {\n        emailError = 'fas fa-times';\n      } else {\n        emailError = 'fas fa-check';\n      }\n\n      this.setState({\n        emailError\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let error = '';\n      let data = {\n        \"email\": this.state.email,\n        \"password\": this.state.password\n      };\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: loginImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"check\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: this.state.emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Forgot your password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/log/log_reg/src/components/login/login.jsx"],"names":["React","loginImg","Formik","EmailValidator","Yup","initialState","email","password","type","switch","error","emailError","Login","Component","constructor","handleChange","e","setState","target","name","value","togglePassword","state","validate","includes","handleSubmit","preventDefault","data","render","props","containerRef"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport loginImg from \"../../BK.jpg\";\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\"; // used when validating with a self-implemented approach\r\nimport * as Yup from \"yup\";\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    type: 'password',\r\n    switch: false,\r\n    error: '',\r\n    emailError: ''\r\n}\r\nexport class Login extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = initialState;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    togglePassword = (e) => {\r\n        this.setState({\r\n            type: this.state.type === 'password' ? 'input' : 'password',\r\n            switch: !this.state.switch\r\n        })\r\n    }\r\n\r\n    validate = (e) => {\r\n        let emailError = '';\r\n\r\n        if (!this.state.email.includes('@' && '.')) {\r\n            emailError = 'fas fa-times'\r\n        } else {\r\n            emailError = 'fas fa-check'\r\n        }\r\n\r\n        this.setState({ emailError })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let error = '';\r\n        let data = {\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n        }\r\n\r\n        \r\n\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"base-container\" ref={this.props.containerRef}>\r\n          <div className=\"header\">Login</div>\r\n          <div className=\"content\">\r\n            <div className=\"image\">\r\n              <img src={loginImg} />\r\n            </div>\r\n            <div className=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">email</label>\r\n                <input id=\"email\" type=\"text\" name=\"email\" placeholder=\"email\" />\r\n                <span className=\"check\">\r\n                        <i className={this.state.emailError} ></i>\r\n                    </span>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n                <span>Forgot your password?</span>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button type=\"button\" className=\"btn\">\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}